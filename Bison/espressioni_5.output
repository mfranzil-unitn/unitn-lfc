Grammar

    0 $accept: R $end

    1 R: R '+' S
    2  | S

    3 S: S T
    4  | T

    5 T: U '*'
    6  | U

    7 U: '(' R ')'
    8  | a
    9  | b


Terminals, with rules where they appear

$end (0) 0
'(' (40) 7
')' (41) 7
'*' (42) 5
'+' (43) 1
error (256)
a (258) 8
b (259) 9


Nonterminals, with rules where they appear

$accept (9)
    on left: 0
R (10)
    on left: 1 2, on right: 0 1 7
S (11)
    on left: 3 4, on right: 1 2 3
T (12)
    on left: 5 6, on right: 3 4
U (13)
    on left: 7 8 9, on right: 5 6


State 0

    0 $accept: . R $end

    a    shift, and go to state 1
    b    shift, and go to state 2
    '('  shift, and go to state 3

    R  go to state 4
    S  go to state 5
    T  go to state 6
    U  go to state 7


State 1

    8 U: a .

    $default  reduce using rule 8 (U)


State 2

    9 U: b .

    $default  reduce using rule 9 (U)


State 3

    7 U: '(' . R ')'

    a    shift, and go to state 1
    b    shift, and go to state 2
    '('  shift, and go to state 3

    R  go to state 8
    S  go to state 5
    T  go to state 6
    U  go to state 7


State 4

    0 $accept: R . $end
    1 R: R . '+' S

    $end  shift, and go to state 9
    '+'   shift, and go to state 10


State 5

    2 R: S .
    3 S: S . T

    a    shift, and go to state 1
    b    shift, and go to state 2
    '('  shift, and go to state 3

    $default  reduce using rule 2 (R)

    T  go to state 11
    U  go to state 7


State 6

    4 S: T .

    $default  reduce using rule 4 (S)


State 7

    5 T: U . '*'
    6  | U .

    '*'  shift, and go to state 12

    $default  reduce using rule 6 (T)


State 8

    1 R: R . '+' S
    7 U: '(' R . ')'

    '+'  shift, and go to state 10
    ')'  shift, and go to state 13


State 9

    0 $accept: R $end .

    $default  accept


State 10

    1 R: R '+' . S

    a    shift, and go to state 1
    b    shift, and go to state 2
    '('  shift, and go to state 3

    S  go to state 14
    T  go to state 6
    U  go to state 7


State 11

    3 S: S T .

    $default  reduce using rule 3 (S)


State 12

    5 T: U '*' .

    $default  reduce using rule 5 (T)


State 13

    7 U: '(' R ')' .

    $default  reduce using rule 7 (U)


State 14

    1 R: R '+' S .
    3 S: S . T

    a    shift, and go to state 1
    b    shift, and go to state 2
    '('  shift, and go to state 3

    $default  reduce using rule 1 (R)

    T  go to state 11
    U  go to state 7
